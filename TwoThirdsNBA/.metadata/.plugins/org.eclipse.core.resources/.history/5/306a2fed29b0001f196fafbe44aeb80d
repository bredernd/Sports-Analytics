package com.cps298.nba.service;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cps298.nba.main_entity.GameSechedule;
import com.cps298.nba.main_entity.TeamStats;
import com.cps298.nba.main_entity.Teams;

@Service
public class HomeService {
    private LocalDate now = LocalDate.now();
    private int year = now.getYear();
    private int month = now.getMonthValue();
    private int dayYesterday = now.getDayOfMonth(); //change this back to ( -1) when time to present 
    private String today = now.toString();
    private String yesterday = LocalDate.of(year, month, dayYesterday).toString();
    private String todayTest = "2024-11-05";
    private String yesterdayTest = "2024-11-04";// DROP THESE STUPID VARIABLES AND THE LIST ONCE DATABASE IS FIXED
    private List<String> teamIds;
    
	
	@Autowired
	DaoService imp;
	
	
	public String displayYesterdaysGames() {
		StringBuilder gameStats = new StringBuilder();
		List<GameSechedule> gameSched = imp.getAllGameSchedule();
		teamIds = new ArrayList<String>();
		
		//Looping through the DB to get info for each game today, and then plugging that data into HTML code to be returned and used in controller.
		for(GameSechedule each : gameSched) {

			if(each.getScheduled().equals(yesterdayTest)) {
				
				//Getting all the data we need for comparison to highlight when displaying
				Teams home = each.getHome_team();
				Teams away = each.getAway_team();
				String homeId = home.getTeamId();
				String awayId = away.getTeamId();
				if(!teamIds.contains(homeId)) { /// GET RID OF THIS STUPID IF STATEMENT AND THE LIST ONCE THE DATABASE IS FIXED
				teamIds.add(homeId);
				TeamStats homeStats = imp.getTeamStats(homeId);
				TeamStats awayStats = imp.getTeamStats(awayId);
				int homePoints = 0;
				int awayPoints = 0;
				String homeName = checkName(home.getName());
				String awayName = checkName(away.getName());
				
				
				if(each.getHome_points() != null && each.getAway_points() != null) {
					homePoints = each.getHome_points();
					awayPoints = each.getAway_points();
				}

				
				
				System.out.println(each.getScheduled() + "home team   " + home.getName() + "  away  " + away.getName());
				
				
				
				// appending the final return result with each games stats when it gets looped.
				gameStats.append(
						"		<div class=\"matchCont\">\r\n"
						+ "			<div class=\"homeCont\">\r\n"
						+ "				<div class=\"" + "logo " + homeName + "\"></div>\r\n"
						+ "				<div class=\"infoCont\">\r\n"
						+ "					<div class=\"homeTeamName\">" + home.getName().toUpperCase() + "</div>\r\n"
						+ "					<div class=\"statsCont\">\r\n"
						+ "						<div class=\"standingsCont\">\r\n"
						+ "							<div class=\"standingsTopCont\">\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">Off-Rat</div>\r\n"
						+ "									<div class=\"standingsStat\">" + homeStats.getOffensive_rating() + "</div>\r\n"
						+ "								</div>\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">Deff-Rat</div>\r\n"
						+ "									<div class=\"standingsStat\">" + homeStats.getDefensive_rating() + "</div>\r\n"
						+ "								</div>\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">Net-Rat</div>\r\n"
						+ "									<div class=\"standingsStat\">" + homeStats.getNet_rating() + "</div>\r\n"
						+ "								</div>\r\n"
						+ "							</div>\r\n"
						+ "							<div class=\"standingsBotCont\">\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">3Pnt-Avg</div>\r\n"
						+ "									<div class=\"standingsStat\">" + calcThreeAverage(homeStats) + "</div>\r\n"
						+ "								</div>\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">2Pnt-Avg</div>\r\n"
						+ "									<div class=\"standingsStat\">" + calcTwoAverage(homeStats) + "</div>\r\n"
						+ "								</div>\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">FT-Avg</div>\r\n"
						+ "									<div class=\"standingsStat\">" + calcFreeThrowAverage(homeStats) + "</div>\r\n"
						+ "								</div>\r\n"
						+ "							</div>\r\n"
						+ "						</div>\r\n"
						+ "						<div class=\"scoreCont\">\r\n"
						+ "							<div class=\"scoreTitle\">Score</div>\r\n"
						+ "							<div class=\"score\">" + homePoints + "</div>\r\n"
						+ "						</div>\r\n"
						+ "					</div>\r\n"
						+ "				</div>\r\n"
						+ "			</div>\r\n"
						+ "			<div class=\"vsLogo\"></div>\r\n"
						+ "			<div class=\"awayCont\">\r\n"
						+ "				<div class=\"infoCont\">\r\n"
						+ "					<div class=\"awayTeamName\">" + away.getName().toUpperCase() + "</div>\r\n"
						+ "					<div class=\"statsCont\">\r\n"
						+ "						<div class=\"scoreCont\">\r\n"
						+ "							<div class=\"scoreTitle\">Score</div>\r\n"
						+ "							<div class=\"score\">" + awayPoints + "</div>\r\n"
						+ "						</div>\r\n"
						+ "						<div class=\"standingsCont\">\r\n"
						+ "							<div class=\"standingsTopCont\">\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">Off-Rat</div>\r\n"
						+ "									<div class=\"standingsStat\">" + awayStats.getOffensive_rating() + "</div>\r\n"
						+ "								</div>\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">Deff-Rat</div>\r\n"
						+ "									<div class=\"standingsStat\">" + awayStats.getDefensive_rating() + "</div>\r\n"
						+ "								</div>\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">Net-Rat</div>\r\n"
						+ "									<div class=\"standingsStat\">" + awayStats.getNet_rating() + "</div>\r\n"
						+ "								</div>\r\n"
						+ "							</div>\r\n"
						+ "							<div class=\"standingsBotCont\">\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">3Pnt-Avg</div>\r\n"
						+ "									<div class=\"standingsStat\">" + calcThreeAverage(awayStats) + "</div>\r\n"
						+ "								</div>\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">2Pnt-Avg</div>\r\n"
						+ "									<div class=\"standingsStat\">" + calcTwoAverage(awayStats) + "</div>\r\n"
						+ "								</div>\r\n"
						+ "								<div class=\"standingsBox\">\r\n"
						+ "									<div class=\"standingsTitle\">FT-Avg</div>\r\n"
						+ "									<div class=\"standingsStat\">" + calcFreeThrowAverage(awayStats) + "</div>\r\n"
						+ "								</div>\r\n"
						+ "							</div>\r\n"
						+ "						</div>\r\n"
						+ "					</div>\r\n"
						+ "				</div>\r\n"
						+ "				<div class=\"logo " + awayName + "\"></div>\r\n"
						+ "			</div>\r\n"
						+ "			\r\n"
						+ "		</div>");
			}
			}
		}
		
		return gameStats.toString();
	}
	
	public String displayTodaysGames() {
		StringBuilder gameStats = new StringBuilder();
		List<GameSechedule> gameSched = imp.getAllGameSchedule();
		teamIds = new ArrayList<String>();
		
		//Looping through the DB to get info for each game today, and then plugging that data into HTML code to be returned and used in controller.
		for(GameSechedule each : gameSched) {

			if(each.getScheduled().equals(todayTest)) {
				Teams home = each.getHome_team();
				Teams away = each.getAway_team();
				String homeId = home.getTeamId();
				String awayId = away.getTeamId();
				if(!teamIds.contains(homeId)) { /// GET RID OF THIS STUPID IF STATEMENT AND THE LIST ONCE THE DATABASE IS FIXED
				teamIds.add(homeId);
				TeamStats homeStats = imp.getTeamStats(homeId);
				TeamStats awayStats = imp.getTeamStats(awayId);
				String homeName = checkName(home.getName());
				String awayName = checkName(away.getName());
				gameStats.append("<div class=\"game\" style=\"display: block;\">\r\n"
						+ "    			<div class=\"todayStats\">\r\n"
						+ "    				<div class=\"logo " + homeName + "\"></div>\r\n"
						+ "    				<div class=\"ratingCont\">\r\n"
						+ "    					<div class=\"netRatTitle\">Net Rating</div>\r\n"
						+ "    					<div class=\"netRatStat\">" + homeStats.getNet_rating() + "</div>\r\n"
						+ "    				</div>\r\n"
						+ "    			</div>\r\n"
						+ "    			<div class=\"vsLogo\" style=\"margin-left:225px;\"></div>\r\n"
						+ "    			<div class=\"todayStats\">\r\n"
						+ "    				<div class=\"logo " + awayName + "\"></div>\r\n"
						+ "    				<div class=\"ratingCont\">\r\n"
						+ "    					<div class=\"netRatTitle\">Net Rating</div>\r\n"
						+ "    					<div class=\"netRatStat\">" + awayStats.getNet_rating() + "</div>\r\n"
						+ "    				</div>\r\n"
						+ "    			</div>\r\n"
						+ "    		</div>"
						
						);
				}
			}
			
		}
			
		return gameStats.toString();
	}
	
	public Double calcFreeThrowAverage(TeamStats team) {
		Double average = (team.getFree_throws_made() / team.getFree_throws_att()) * 100.00;
		average = round(average, 2);
		return average;
	}
	
	public Double calcThreeAverage(TeamStats team) {
		Double average = (team.getThree_points_made() / team.getThree_points_att()) * 100.00;
		average = round(average, 2);
		return average;
	}
	
	public Double calcTwoAverage(TeamStats team) {
		Double average = (team.getTwo_points_made() / team.getTwo_points_att()) * 100.00;
		average = round(average, 2);
		return average;
	}
	
	public static double round(double value, int places) {
	    if (places < 0) throw new IllegalArgumentException();

	    long factor = (long) Math.pow(10, places);
	    value = value * factor;
	    long tmp = Math.round(value);
	    return (double) tmp / factor;
	}
	
	public String checkName(String name) {
		String finalName = name.toLowerCase();
		switch(finalName){
		case "76ers":
			finalName = "sevensix";
			break;
		case "trail blazers":
			finalName = "trail";
			break;
		default:
			break;
		}
		
		return finalName;
	}

}
